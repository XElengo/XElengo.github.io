[{"title":"【Java编码规范】《阿里巴巴Java开发手册（正式版）》发布！","date":"2017-02-12T06:39:43.674Z","path":"2017/02/12/【Java编码规范】《阿里巴巴Java开发手册（正式版）》发布！/","text":"2017年2月9日阿里巴巴发布了一份《阿里巴巴Java开发手册（正式版）》，引起了互联网上程序员们广泛讨论。 作为一名java伪初学者，得知这个消息还是要尽快来学习学习的。毕竟是阿里巴巴出的编码规范，总是会对初学者有很大帮助吧。一份好的编码规约，能够让编程少踩很多坑；一个好的编程习惯，能让以后的编程旅途更加顺畅。 点击进行百度云下载 摘要： 阿里巴巴集团推出的《阿里巴巴Java开发手册（正式版）》是阿里巴巴近万名开发同学集体智慧的结晶，以开发视角为中心，详细列举如何开发更加高效、更加容错、更加有协作性，力求知其然，更知其不然，结合正反例，让Java开发者能够提升协作效率、提高代码质量。* 2017年开春之际，诚意献上重磅大礼：阿里巴巴Java开发手册，首次公开阿里官方Java代码规范标准。这套Java统一规范标准将有助于提高行业编码规范化水平，帮助行业人员提高开发质量和效率、大大降低代码维护成本。 点击下载《阿里巴巴Java开发手册》：阿里云点击下载 https://yq.aliyun.com/attachment/download/?id=1170 （点击参与话题讨论：Java开发者们，一起来聊聊大家的开发规约吧） 你是否曾因Java代码规范版本纷杂而无所适从？你是否想过代码规范能将系统故障率降低20%？你是否曾因团队代码风格迥异而协同困难？你是否正在review一些原本可以避免的故障？你是否无法确定自己的代码足够健壮？ 码出高效，码出质量！ 相比C++代码规范业界已经达成共识，Java代码规范业界比较混乱，我们期待这次发布的Java代码规范能够给业界带来一个标准，促使整体行业代码规范水平得到提高，最终能够帮助企业和开发者提升代码质量和降低代码故障率。 阿里出品，质量保证！ 阿里Java技术团队一手打造出Dubbo、JStorm、Fastjson等诸多流行开源框架，部分已成为Apache基金会孵化项目； 阿里在Java后端领域支撑起全球访问量最大的服务器集群； Java代码构建的阿里双11业务系统订单处理能力达到17.5万笔/秒； 到目前已累计数亿行高并发、高稳定性的最佳Java代码实践； …… 此次首度公开的Java开发手册正是出自这样的团队，近万名阿里Java技术精英的经验总结，并经历了多次大规模一线实战检验及完善，铸就了这本高含金量的阿里Java开发手册。该手册以Java开发者为中心视角，划分为编程规约、异常日志规约、MYSQL规约、工程规约、安全规约五大块，再根据内容特征，细分成若干二级子目录。根据约束力强弱和故障敏感性，规约依次分为强制、推荐、参考三大类。此套规范不仅能让代码一目了然， 更有助于加强团队分工与合作、真正提升效率。 无规矩不成方圆 无规范不能协作 众所周知，制订交通法规表面上是要限制行车权，实际上是保障公众的人身安全。试想如果没有限速，没有红绿灯，没有规定靠右行驶，谁还敢上路行驶。 同理，对软件来说，适当的规范和标准绝不是消灭代码内容的创造性、优雅性，而是限制过度个性化，以一种普遍认可的方式一起做事，降低故障率，提升协作效率。开发手册详细列举如何开发更加高效，更加容错，更加有协作性，力求知其然，更知其不然，结合正反例，提高代码质量。比如，异常日志处理时的各种不规范行为；集合转换的各种坑；创建线程池出现的等待队列OOM等。 阿里技术资深大咖联袂推荐 阿里高级研究员多隆：工程师对于代码，一定要“精益求精”，不论从性能，还是简洁优雅，都要具备“精益求精”的工匠精神，认真打磨自己的作品。 阿里研究员毕玄：一个优秀的工程师和一个普通工程师的区别，不是现在满天飞的架构图，他的功底就是体现在他写的每一行代码上。 阿里研究员玄难：代码是软件工程里面的产品设计、系统架构设计等工作的最后承载体，代码的质量决定了一切工作的成败。 阿里巴巴B2B事业群CTO李纯：好的软件产品离不开工程师高质量的代码及相互间顺畅的沟通与合作。简单，适用的代码规约背后所传递的是技术上的追求卓越、协同合作的精神，是每个技术团队不可缺失的重要利器。 阿里研究员、HipHop作者：赵海平（花名：福贝）：程序员是创造个性化作品的艺术家，但同时也是需要团队合作的工种。个性化应尽量表现在代码效率和算法方面，牺牲小我，成就大我。 拥抱规范，远离伤害！ 开发的同学们赶紧行动起来，遵守代码规范，你好，我好，大家好！ 扩展阅读： 知乎–如何评价阿里近期发布的Java编码规范？ 云栖社区–【Java编码规范】《阿里巴巴Java开发手册（正式版）》发布！ 掘金–【Java编码规范】《阿里巴巴Java开发手册（正式版）》发布！ 云栖社区-话题讨论-Java开发者们，一起来聊聊大家的开发规约吧","tags":[{"name":"编程","slug":"编程","permalink":"https://xelengo.github.io/tags/编程/"},{"name":"java","slug":"java","permalink":"https://xelengo.github.io/tags/java/"},{"name":"知识分享","slug":"知识分享","permalink":"https://xelengo.github.io/tags/知识分享/"},{"name":"阿里巴巴","slug":"阿里巴巴","permalink":"https://xelengo.github.io/tags/阿里巴巴/"},{"name":"开发手册","slug":"开发手册","permalink":"https://xelengo.github.io/tags/开发手册/"},{"name":"代码规范","slug":"代码规范","permalink":"https://xelengo.github.io/tags/代码规范/"}]},{"title":"Python3.6安装教程","date":"2017-02-04T02:43:33.173Z","path":"2017/02/04/安装python3.6/","text":"首先。先看一下Python的简介： Python（英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/），是一种面向对象、解释型的计算机程序语言。它包含了一组功能完备的标准库，能够轻松完成很多常见的任务。它的语法简单，与其它大多数程序设计语言使用大括号不一样，它使用缩进来定义语句块。 与Scheme、Ruby、Perl、Tcl等动态语言一样，Python具备垃圾回收功能，能够自动管理内存使用。它经常被当作脚本语言用于处理系统管理任务和网络程序编写，然而它也非常适合完成各种高级任务。Python虚拟机本身几乎可以在所有的作业系统中运行。使用一些诸如py2exe、PyPy、PyInstaller之类的工具可以将Python源代码转换成可以脱离Python解释器运行的程序。 Python的官方解释器是CPython，该解释器用C语言编写，是一个由社区驱动的自由软件，目前由Python软件基金会管理。 Python支持命令式程序设计、面向对象程序设计、函数式编程、面向侧面的程序设计、泛型编程多种编程范式。 from:wiki 在Windows上安装Python首先，根据你的Windows版本（64位还是32位）从Python的官方网站下载Python 3.6对应的64位安装程序或32位安装程序（网速慢的同学请移步国内镜像），点击下载 然后，运行下载的EXE安装包： 特别要注意勾上Add Python 3.6 to PATH，然后点“Install Now”即可完成安装。 默认会安装到C:\\Users\\用户名\\AppData\\Local\\Programs\\Python\\Python36目录下，然后打开命令提示符窗口，敲入python后，会出现两种情况： 看到上面的画面，就说明Python安装成功！ 你看到提示符&gt;&gt;&gt;就表示我们已经在Python交互式环境中了，可以输入任何Python代码，回车后会立刻得到执行结果。现在，输入exit()并回车，就可以退出Python交互式环境（直接关掉命令行窗口也可以）。 情况二：得到一个错误： 1‘python’ 不是内部或外部命令，也不是可运行的程序或批处理文件。 这是因为Windows会根据一个Path的环境变量设定的路径去查找python.exe，如果没找到，就会报错。如果在安装时漏掉了勾选Add Python 3.5 to PATH，那就要手动把python.exe所在的路径添加到Path中。 如果你不知道怎么修改环境变量，建议把Python安装程序重新运行一遍，务必记得勾上Add Python 3.5 to PATH。 参考教程：安装Python–廖雪峰","tags":[{"name":"随笔","slug":"随笔","permalink":"https://xelengo.github.io/tags/随笔/"},{"name":"教程","slug":"教程","permalink":"https://xelengo.github.io/tags/教程/"}]},{"title":"window10安装mysql数据库","date":"2017-02-04T00:55:36.373Z","path":"2017/02/04/window10安装mysql数据库/","text":"mysql是一个轻量级的数据库，非常适合独立开发者安装到自己的电脑上进行程序开发和测试。 Mysql关系型数据库管理系统MySQL是一个开放源码的小型关联式数据库管理系统，开发者为瑞典MySQL AB公司。MySQL被广泛地应用在Internet上的中小型网站中。由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，许多中小型网站为了降低网站总体拥有成本而选择了MySQL作为网站数据库。 这篇文章主要为大家分享了mysql 5.7.13 安装配置方法图文教程,感兴趣的朋友可以参考一下 MySQL是一款关系型数据库管理系统，是由Oracle旗下公司MySQL AB 公司开发，是在web方面最好的、最流行的关系型数据库软件应用之一，深受广大个人使用者以及中小型企业的喜爱。 1.下载当前最新版5.7.17.0 官网下载地址：https://dev.mysql.com/downloads/installer/ 上面明确提示：MySQL安装程序是32位的，但会同时安装32位和64位二进制文件。 所以同样适用于32位和64位的Window操作系统。 下载的地方有两个，上面一个1.5M的是在线安装程序，我们下载下面一个234.8M的，下载后可直接安装。点击 : Download, 出现如下： 跳过登陆，直接进行下载，直接点击左下角 ：No thanks,just start my download 进行下载。 校验： 大小: 405422080 字节 MD5: E03723EB6C6BAC271A848BD9031EA859 SHA1: 064CE58B994314A5F055851BA4B762A37908439B CRC32: FAF8B4EF 效验工具：Hash.exe 下载好后进行安装 2. 安装双击安装文件，进入安装，在协议许可（LicenseAgreement）界面，勾选“I accept the license term”，然后点击“next” 在选择安装类型（ChoosingaSetupType）界面，根据安装需求选择安装类型（推荐默认开发版本），设置MySQL安装路径和数据存放路径，最后点击“next”。 在检查要求（CheckRequirements）界面，点击“Execute”检查是否达到安装的要求，通过检查要求后点击“next‘ 注意：点击“Execute”按钮后，可能会下载一些程序，到时你自己点击安装就行了，直到所有安装完成就OK了 因为我的电脑安装有visuao studio 和python 2.7,而这个版本的mysql支持的是python3.4;所以会检查不通过,不用管它，继续next。 在安装（Installation）界面，点击“Execute”开始安装，所有的product安装完毕后点击“next” 在配置概述（Product Configuration）界面，点击“next” 在MySQL服务配置（Type and Networking - ServerConfiguration Type）界面，勾选Show Advanced Options，其他的默认不做修改，点击“next”。 在账号和角色设置（Accounts and Roles）界面，设置根账户（root账户）密码，添加一个MySQL User Accounts（非根）用户账户。其目的是便于数据库权限管理，为远程访问者提供安全账户，点击“next” 在Windows Service界面，默认windows服务配置不做修改，点击“next” 在插件与扩展（Plugins and Extensions）界面，默认设置，点击“next” 在高级选项设置（Advanced Options）界面，默认原有设置，点击“next” 在应用服务器配置（Apply Server Configuration）界面，点击“Execute”，当所有的配置执行完毕后，configuration for mysql server 5.7.13 has successed，点击“finish” 在产品配置（Product Configuration）界面，点击“next” 在连接到服务器（Connect To Server）界面，点击“check”，测试服务器是否连接成功，连接成功后，点击“next”， 回到应用服务器配置（Apply Server Configuration）界面，点击“Execute”，配置成功后，点击“finish” 回到产品配置（Product Configuration）界面，点击“next”， 在安装完成（Installation Complete）界面，点击“finish” 以上就是mysql 5.7.13安装配置方法，希望对大家的学习有所帮助。 3.测试接下来会自动打开MySQL Workbench，再测试一下： 输入超级管理员密码，进行登录 登陆成功 输入sql语句进行测试； 1show database; 好了，本教程结束 参考教程：mysql下载： http://blog.csdn.net/wtfmonking/article/details/17467399 安装： http://www.phperz.com/article/16/0703/231883.html 测试： http://jingyan.baidu.com/article/7e440953d6f0702fc1e2ef61.html RUNOOB教程：http://www.runoob.com/mysql/mysql-install.html","tags":[{"name":"随笔","slug":"随笔","permalink":"https://xelengo.github.io/tags/随笔/"},{"name":"教程","slug":"教程","permalink":"https://xelengo.github.io/tags/教程/"}]},{"title":"写博客随笔（四）","date":"2017-02-03T11:02:53.773Z","path":"2017/02/03/yilia的两个_config/","text":"公布两份_config.ymlhexo根目录下的_config 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Site #站点信息title: XElengo的个人博客subtitle: 从今天起，立志改变description: 我的个人学习&amp;生活记录author: Xulinhuemail: 18838969833@163.comkeywords: \"Java,Android,C#,HTML5\"language: zh-CNtimezone: # URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://xelengo.github.io/root: /permalink: :year/:month/:day/:title/permalink_defaults:# Directory #目录source_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writing # 写作new_post_name: :title.md # File name of new postsdefault_layout: post #默认模板(post page photo draft)titlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: true tab_replace: ''# Category &amp; Tag #分类和标签default_category: uncategorizedcategory_map:tag_map:# Archives## 2: Enable pagination## 1: Disable pagination## 0: Fully Disablearchive: 1category: 1tag: 1# Date / Time format #日期时间格式## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination #分页## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Disqus #Disqus评论系统disqus_shortname:# Extensions #插件和主题## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: yiliaexclude_generator:feed: type: atom path: atom.xml limit: 100# Deployment #部署, 同时发布在 GitHub 和 GitCafe 上面## Docs: https://hexo.io/docs/deployment.html# deploy:# type: git# repository: https://github.com/xelengo/xelengo.github.io.git //jarson7426替换为你自己的用户名# branch: master # deploy:# - type: git# repo: git@gitcafe.com:username/username.git,gitcafe-pages# - type: git# repo: git@github.com:username/username.github.io.git,master # plugins: #插件，例如生成 RSS 和站点地图的# - hexo-generator-feed# - hexo-generator-sitemap jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true yilia根目录下的_config123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Site #站点信息title: XElengo的个人博客subtitle: 从今天起，立志改变description: 我的个人学习&amp;生活记录author: Xulinhuemail: 18838969833@163.comkeywords: \"Java,Android,C#,HTML5\"language: zh-CNtimezone: # URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://xelengo.github.io/root: /permalink: :year/:month/:day/:title/permalink_defaults:# Directory #目录source_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writing # 写作new_post_name: :title.md # File name of new postsdefault_layout: post #默认模板(post page photo draft)titlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: true tab_replace: ''# Category &amp; Tag #分类和标签default_category: uncategorizedcategory_map:tag_map:# Archives## 2: Enable pagination## 1: Disable pagination## 0: Fully Disablearchive: 1category: 1tag: 1# Date / Time format #日期时间格式## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination #分页## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Disqus #Disqus评论系统disqus_shortname:# Extensions #插件和主题## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: yiliaexclude_generator:feed: type: atom path: atom.xml limit: 100# Deployment #部署, 同时发布在 GitHub 和 GitCafe 上面## Docs: https://hexo.io/docs/deployment.html# deploy:# type: git# repository: https://github.com/xelengo/xelengo.github.io.git //jarson7426替换为你自己的用户名# branch: master # deploy:# - type: git# repo: git@gitcafe.com:username/username.git,gitcafe-pages# - type: git# repo: git@github.com:username/username.github.io.git,master # plugins: #插件，例如生成 RSS 和站点地图的# - hexo-generator-feed# - hexo-generator-sitemap jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true","tags":[{"name":"随笔","slug":"随笔","permalink":"https://xelengo.github.io/tags/随笔/"}]},{"title":"写博客随笔（三）","date":"2017-02-03T04:50:34.505Z","path":"2017/02/03/yilia使用/","text":"yilia主题使用和配置本篇内容转自 litten.me 一、使用1. 安装1$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 2. 配置修改hexo根目录下的 _config.yml ： theme: yilia 3. 更新12cd themes/yiliagit pull 二、配置主题配置文件在主目录下的_config.yml： 1234567891011121314151617181920212223# Headermenu: 主页: / 所有文章: /archives # 旧事: /tags/旧事# SubNavsubnav: github: \"https://github.com/litten\" weibo: \"http://weibo.com/litten225\" rss: \"http://feed.feedsky.com/litten\" # facebook: \"/\" # google: \"/\" # twitter: \"/\" # linkedin: \"/\"rss: /atom.xml# Contentexcerpt_link: morefancybox: true# Miscellaneousfavicon: /favicon.pngavatar: \"https://avatars2.githubusercontent.com/u/2024949?v=2&amp;s=150\"share: trueduoshuo: true 禁止评论可以通过修改你的.md文章的头部实现。设置comments:false即可。 三、 hexo指令集Git Shell 在你的hexo根目录下输入：hexo可查看 1hexo 123456789101112131415161718192021222324252627Usage: hexo &lt;command&gt;Commands: clean Removed generated files and cache. config Get or set configurations. deploy Deploy your website. generate Generate static files. help Get help on a command. init Create a new Hexo folder. list List the information of the site migrate Migrate your site from other system to Hexo. new Create a new post. publish Moves a draft post from _drafts to _posts folder. render Render files with renderer plugins. server Start the server. version Display version information.Global Options: --config Specify config file instead of using _config.yml --cwd Specify the CWD --debug Display all verbose messages in the terminal --draft Display draft posts --safe Disable all plugins and scripts --silent Hide output on consoleFor more help, you can use 'hexo help [command]' for the detailed informationor you can check the docs: http://hexo.io/docs/","tags":[{"name":"随笔","slug":"随笔","permalink":"https://xelengo.github.io/tags/随笔/"}]},{"title":"写博客随笔（二）","date":"2017-02-02T11:16:04.226Z","path":"2017/02/02/test/","text":"测试 设置标题，标签：title: 测试 tags: [随笔,测试标签] 123456789101112131415设置标签可以通过下面两种方式实现menu:主页: /所有文章: /archives前端: /categories/前端随笔: /tags/随笔在post的顶部添加categories: 前端 ，tags: 随笔或者menu:主页: /所有文章: /archives前端: /tags/前端随笔: /tags/随笔 在post的顶部添加tags: [随笔, 前端] 使用yilia主题时，文章过长使用&lt;!-- more --&gt;截断文章，示例如第一篇博客。 yilia模板范例：yilia博客 测试插入图片：网络(绝对)路径(显示大图可获得该路径)： 相对路径： 语法高亮: 1cpp &#123;int a,b;&#125; yilia 多说评论插件使用多说插件duoshuo: &quot;xxxx&quot; 已设置，但是无法成功显示，浏览器调试工具console报错：990002 自己解决了，方法虽然不太好；写死这个地方yilia\\layout_partial\\post\\duoshuo.ejs ： var duoshuoQuery = {short_name:”xelengo”};short_name是用多说网站生成的模板 即 工具–&gt;通用代码中的short_name，即 多说–&gt;设置 那里的域名的第一部分，如：xelengo.duoshuo.com 中的xelengo。因为多说的账户名称可以修改，但注册账号时的多说域名不可修改，且账户名称与域名的第一部分允许不同，而多说评论插件是通过访问多说域名进行显示的。所以可能会出错吧。另外本地缓存，github上的代码，以及多说本身都会影响运行结果。谢谢 @litten 提供的模板 参见：https://github.com/litten/hexo-theme-yilia/issues/28 待在线浏览成功后可以再把var duoshuoQuery = {short_name:”xelengo”};改回去。重新发布后评论栏依然存在。由此可以把锅甩给缓存了。。。 试试代码高亮：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&lt;!doctype html&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;table&#123; background:grey;&#125; &lt;/style&gt;&lt;script&gt; function addListen()&#123; var arrTrs = document.getElementsByTagName('tr'); for(var i=0;i&lt;arrTrs.length;i++)&#123; var ss = arrTrs[i] ; if(arrTrs[i].addEventListener)&#123; arrTrs[i].addEventListener('click',setTable) &#125;else&#123; arrTrs[i].attachEvent(\"onclick\",setTable); &#125; &#125; &#125; function setTable(evt)&#123; var arrTrs = document.getElementsByTagName('tr'); for(var i=0;i&lt;arrTrs.length;i++)&#123; arrTrs[i].style.background='grey'; &#125; evt.target.parentNode.style.background='red'; &#125;&lt;/script&gt;&lt;/head&gt;&lt;body onload='addListen()'&gt; &lt;table border=1 width='400px'&gt; &lt;tr&gt;&lt;td&gt;s1&lt;/td&gt;&lt;td&gt;s1&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;s1&lt;/td&gt;&lt;td&gt;s1&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;s1&lt;/td&gt;&lt;td&gt;s1&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;s1&lt;/td&gt;&lt;td&gt;s1&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;s1&lt;/td&gt;&lt;td&gt;s1&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;s1&lt;/td&gt;&lt;td&gt;s1&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;s1&lt;/td&gt;&lt;td&gt;s1&lt;/td&gt;&lt;/tr&gt; &lt;/table&gt;&lt;/body&gt;&lt;/html&gt; ###有任何无法解释的异常都可以试试这三个命令：1234hexo cleanhexo ghexo d //发布，手动发布可忽略hexo s","tags":[{"name":"随笔","slug":"随笔","permalink":"https://xelengo.github.io/tags/随笔/"}]},{"title":"我的第一篇博文+初步建立博客随笔（一）","date":"2017-02-02T02:26:02.612Z","path":"2017/02/02/hello-world/","text":"Welcome to my blog. There is my first article. 原来的欢迎页的一些操作重点： 示例使用MarkDownPad 两个#号示例使用MarkDownPad 三个#号 示例超链接: 跳转到百度 历时两天，从有一个使用github的想法但不知道github可以做什么，到知道用github+hexo可以自建博客，再自己一路摸索过来，在网上不断地找教程，学习，尝试，最后借用github大神的框架进行尝试并成功的建立自己的博客，收获良多。 之后会把自己的建博客经过写出来，供大家参考。 博客和新浪微博，QQ空间，百度贴吧等一样，它更像是一个完全属于自己的小站，把它从无到有的建立出来的这个过程，是有着完全不同的体会。 感谢&amp;参考文档：框架模板来自github大神：litten-github主页，litten的博客 官方文档还是很有用的：hexo官方网站 hexo框架github地址，有个readme.md还是有点用的：https://github.com/hexojs/hexo/ 这篇博客也很不错，我就是通过学习这个教程做的。https://wsgzao.github.io/post/hexo-guide/ 如果要建一个独立域名的个人博客，可以参考这一篇：http://www.cnfeat.com/blog/2014/05/10/how-to-build-a-blog/ 一个个人收藏的博客：http://jocs.me/blog/ github参考：https://github.com/youngxhui/youngxhui.github.io github终端操作指令：安装前提：需要已安装github for windows,node.js 安装: 1`npm install hexo-cli -g`或`npm install -g hexo-cli` 一段时间后，安装完成，安装到C盘 1hexo -v 检查版本信息，验证是否安装成功 1npm install hexo --save 安装到D盘（我是这么理解的） 安装完成后就需要创建本地站点了。 首先选择一个文件夹作为本地站点根目录。如： 1cd.. 后退到上级目录 1hexo init [folder] 新建一个网站(初始化)。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站,所以选择好目录后就变成了： 1hexo init 执行完毕后如图： 启动服务（先看看效果(http://localhost:4000/)，看完记得关闭服务（ctrl+c）） 1hexo server 接下来，安装插件（可以一次性复制下面所有命令进行执行，虽然我也不知道这些代码有什么用） 12345678910111213141516171819202122232425npm install hexo-generator-index --savenpm install hexo-generator-archive --savenpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-git --savenpm install hexo-deployer-heroku --savenpm install hexo-deployer-rsync --savenpm install hexo-deployer-openshift --savenpm install hexo-renderer-marked@0.2 --savenpm install hexo-renderer-stylus@0.2 --savenpm install hexo-generator-feed@1 --savenpm install hexo-generator-sitemap@1 --save 安装结果： 再看看效果Hexo简写命令 1234567hexo n #生成文章，或者source\\_posts手动编辑,如果报错就改错。hexo s #本地发布预览效果hexo g #生成public静态文件最后我选择手动同步更新至GitHub 还要再装一个yilin需要用的插件：1npm i hexo-generator-json-content --save 安装完再部署一遍 部署静态网页到GitHub注册设置GitHub— 登录GitHub，注册自定义用户名如wsgzao — 在主页右下角创建New repository，name必须和用户名一致如wsgzao.github.io – 首次创建耐心等待10分钟左右审核，之后即可访问静态主页如http://wsgzao.github.io 同步内容至GitHub 下载GitHub Windows 设置Local path如E:\\快盘\\GitHub\\ 运行Git Shell切换到如E:\\快盘\\GitHub\\hexo路径下 执行hexo g命令生成public文件夹 把生成的内容全部拷贝到Local path或其子目录 运行GitHub确认修改信息后执行右上角的Sync同步 最后访问主页观察效果 其他指令卸载：1npm uninstall hexo 清理掉D盘的相关文件1npm uninstall hexo-cli -g 清理掉C盘的相关文件1npm install -g hexo-cli ##测试$发布常用指令：清除缓存：hexo clean 生成文章 hexo n 本地发布预览效果 hexo s 生成public静态文件 hexo g #生成public静态文件 最后手动同步更新至GitHub 下面贴出github上star数量最多的前10个主题： iissnan/hexo-theme-next ， 3510个star。 litten/hexo-theme-yilia ， 1703个star。 TryGhost/Casper ， 679个star。 wuchong/jacman ， 503个star。 A-limon/pacman ， 431个star。 daleanthony/uno ， 416个star。 orderedlist/modernist ， 367个star。 AlxMedia/hueman ， 336个star。 kathyqian/crisp-ghost-theme ， 303个star。 xiangming/landscape-plus ， 287个star。","tags":[{"name":"随笔","slug":"随笔","permalink":"https://xelengo.github.io/tags/随笔/"},{"name":"github","slug":"github","permalink":"https://xelengo.github.io/tags/github/"},{"name":"hexo","slug":"hexo","permalink":"https://xelengo.github.io/tags/hexo/"},{"name":"博客","slug":"博客","permalink":"https://xelengo.github.io/tags/博客/"}]}]