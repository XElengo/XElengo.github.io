[{"title":"测试","date":"2017-02-02T11:16:04.226Z","path":"2017/02/02/test/","text":"测试 使用yilia主题时，文章过长使用&lt;!-- more --&gt;截断文章，示例如第一篇博客。 yilia模板范例：yilia博客 测试插入图片：网络(绝对)路径： 相对路径： yilia 多说评论插件使用多说插件duoshuo: &quot;xxxx&quot; 已设置，但是无法成功显示，浏览器调试工具console报错：990002 自己解决了，方法虽然不太好；写死这个地方yilia\\layout_partial\\post\\duoshuo.ejs ： var duoshuoQuery = {short_name:”xelengo”};short_name是用多说网站生成的模板 即 工具–&gt;通用代码中的short_name，即 多说–&gt;设置 那里的域名的第一部分，如：xelengo.duoshuo.com 中的xelengo。因为多说的账户名称可以修改，但注册账号时的多说域名不可修改，且账户名称与域名的第一部分允许不同，而多说评论插件是通过访问多说域名进行显示的。所以可能会出错吧。另外本地缓存，github上的代码，以及多说本身都会影响运行结果。谢谢 @litten 提供的模板 参见：https://github.com/litten/hexo-theme-yilia/issues/28 待在线浏览成功后可以再把var duoshuoQuery = {short_name:”xelengo”};改回去。重新发布后评论栏依然存在。由此可以把锅甩给缓存了。。。","tags":[]},{"title":"我的第一篇博文+初步建立博客随笔","date":"2017-02-02T02:26:02.612Z","path":"2017/02/02/hello-world/","text":"Welcome to my blog. There is my first article. 原来的欢迎页的一些操作重点： 示例使用MarkDownPad 两个#号示例使用MarkDownPad 三个#号 代码这样： 1$ int a,b,c; 示例超链接: 跳转到百度 历时两天，从有一个使用github的想法但不知道github可以做什么，到知道用github+hexo可以自建博客，再自己一路摸索过来，在网上不断地找教程，学习，尝试，最后借用github大神的框架进行尝试并成功的建立自己的博客，收获良多。 之后会把自己的建博客经过写出来，供大家参考。 博客和新浪微博，QQ空间，百度贴吧等一样，它更像是一个完全属于自己的小站，把它从无到有的建立出来的这个过程，是有着完全不同的体会。 感谢&amp;参考文档：框架模板来自github大神：litten-github主页，litten的博客 官方文档还是很有用的：hexo官方网站 hexo框架github地址，有个readme.md还是有点用的：https://github.com/hexojs/hexo/ 这篇博客也很不错，我就是通过学习这个教程做的。https://wsgzao.github.io/post/hexo-guide/ 如果要建一个独立域名的个人博客，可以参考这一篇：http://www.cnfeat.com/blog/2014/05/10/how-to-build-a-blog/ 一个个人收藏的博客：http://jocs.me/blog/ github参考：https://github.com/youngxhui/youngxhui.github.io github终端操作指令：安装前提：需要已安装github for windows,node.js 安装:1`npm install hexo-cli -g`或`npm install -g hexo-cli` 一段时间后，安装完成，安装到C盘 1hexo -v 检查版本信息，验证是否安装成功 1npm install hexo --save 安装到D盘（我是这么理解的） 安装完成后就需要创建本地站点了。 首先选择一个文件夹作为本地站点根目录。如： 1cd.. 后退到上级目录 1hexo init [folder] 新建一个网站(初始化)。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站,所以选择好目录后就变成了： 1hexo init 执行完毕后如图3img 启动服务（先看看效果(http://localhost:4000/)，看完记得关闭服务（ctrl+c）） 1hexo server 接下来，安装插件（可以一次性复制下面所有命令进行执行，虽然我也不知道这些代码有什么用） 12345678910111213141516171819202122232425npm install hexo-generator-index --savenpm install hexo-generator-archive --savenpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-git --savenpm install hexo-deployer-heroku --savenpm install hexo-deployer-rsync --savenpm install hexo-deployer-openshift --savenpm install hexo-renderer-marked@0.2 --savenpm install hexo-renderer-stylus@0.2 --savenpm install hexo-generator-feed@1 --savenpm install hexo-generator-sitemap@1 --save 安装结果：img4 再看看效果Hexo简写命令 1234567hexo n #生成文章，或者source\\_posts手动编辑,如果报错就改错。hexo s #本地发布预览效果hexo g #生成public静态文件最后我选择手动同步更新至GitHub 还要再装一个yilin需要用的插件：npm i hexo-generator-json-content --save 安装完再部署一遍 部署静态网页到GitHub注册设置GitHub— 登录GitHub，注册自定义用户名如wsgzao — 在主页右下角创建New repository，name必须和用户名一致如wsgzao.github.io – 首次创建耐心等待10分钟左右审核，之后即可访问静态主页如http://wsgzao.github.io 同步内容至GitHub 下载GitHub Windows 设置Local path如E:\\快盘\\GitHub\\ 运行Git Shell切换到如E:\\快盘\\GitHub\\hexo路径下 执行hexo g命令生成public文件夹 把生成的内容全部拷贝到Local path或其子目录 运行GitHub确认修改信息后执行右上角的Sync同步 最后访问主页观察效果 其他指令卸载：1npm uninstall hexo 清理掉D盘的相关文件1npm uninstall hexo-cli -g 清理掉C盘的相关文件1npm install -g hexo-cli ##测试$发布常用指令：清除缓存：hexo clean 生成文章 hexo n 本地发布预览效果 hexo s 生成public静态文件 hexo g #生成public静态文件 最后手动同步更新至GitHub 下面贴出github上star数量最多的前10个主题： iissnan/hexo-theme-next ， 3510个star。 litten/hexo-theme-yilia ， 1703个star。 TryGhost/Casper ， 679个star。 wuchong/jacman ， 503个star。 A-limon/pacman ， 431个star。 daleanthony/uno ， 416个star。 orderedlist/modernist ， 367个star。 AlxMedia/hueman ， 336个star。 kathyqian/crisp-ghost-theme ， 303个star。 xiangming/landscape-plus ， 287个star。","tags":[]}]